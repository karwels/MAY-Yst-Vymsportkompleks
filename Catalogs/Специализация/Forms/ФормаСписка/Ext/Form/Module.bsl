&НаКлиенте
Процедура Загрузить(Команда)
    // Открываем диалоговое окно для выбора файла
    ДиалогОткрытияФайла = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Открытие);
    ДиалогОткрытияФайла.Заголовок = "Выберите файл для загрузки";
    ДиалогОткрытияФайла.Фильтр = "Текстовые файлы (*.txt)|*.txt|Файлы Excel (*.xls, *.xlsx)|*.xls;*.xlsx|CSV файлы (*.csv)|*.csv";
    
    Если ДиалогОткрытияФайла.Выбрать() Тогда
        ПутьКФайлу = ДиалогОткрытияФайла.ПолноеИмяФайла;
        
        // Определяем расширение файла
        ПозицияТочки = СтрНайти(ПутьКФайлу, ".");
        Если ПозицияТочки > 0 Тогда
            Расширение = Сред(ПутьКФайлу, ПозицияТочки);
        Иначе
            Сообщить("Файл не имеет расширения.");
            Возврат;
        КонецЕсли;
        
        Если Лев(Расширение, 4) = ".txt" Или Лев(Расширение, 4) = ".csv" Тогда
            Данные = ЗагрузитьИзTXTИлиCSV(ПутьКФайлу);
        ИначеЕсли Лев(Расширение, 4) = ".xls" Или Лев(Расширение, 5) = ".xlsx" Тогда
            Данные = ЗагрузитьИзExcel(ПутьКФайлу);
        Иначе
            Сообщить("Неподдерживаемый формат файла.");
            Возврат;
        КонецЕсли;
        
        ОбработатьДанныеНаСервере(Данные); // Вызов серверной процедуры
    Иначе
        Сообщить("Файл не выбран.");
    КонецЕсли;
КонецПроцедуры

&НаКлиенте
Функция ЗагрузитьИзTXTИлиCSV(Путь)
    ЧтениеТекста = Новый ЧтениеТекста(Путь);
    Данные = ЧтениеТекста.Прочитать();
    ЧтениеТекста.Закрыть();
    Возврат Данные;
КонецФункции

&НаСервере
Функция ЗагрузитьИзExcel(Путь)
    Данные = "";
    
    Попытка
        // Создаем COM-объект для работы с Excel
        Excel = Новый COMОбъект("Excel.Application");
        Excel.Visible = Ложь; // Скрываем окно Excel
        Книга = Excel.Workbooks.Open(Путь);
        Лист = Книга.Sheets(1); // Выбираем первый лист
        
        // Читаем данные из листа
        КоличествоСтрок = Лист.UsedRange.Rows.Count;
        КоличествоКолонок = Лист.UsedRange.Columns.Count;
        
        Для Строка = 1 По КоличествоСтрок Цикл
            СтрокаДанных = "";
            Для Колонка = 1 По КоличествоКолонок Цикл
                ЗначениеЯчейки = Лист.Cells(Строка, Колонка).Text;
                СтрокаДанных = СтрокаДанных + ?(СтрокаДанных = "", "", ";") + СокрЛП(ЗначениеЯчейки);
            КонецЦикла;
            Данные = Данные + ?(Данные = "", "", Символы.ПС) + СтрокаДанных;
        КонецЦикла;
        
        // Закрываем книгу и Excel
        Книга.Close(Ложь);
        Excel.Quit();
    Исключение
        Сообщить("Ошибка при чтении Excel-файла: " + ОписаниеОшибки());
    КонецПопытки;
    
    Возврат Данные;
КонецФункции

&НаСервере
Процедура ОбработатьДанныеНаСервере(Данные)
    Строки = СтрРазделить(Данные, Символы.ПС);
    ПропуститьЗаголовок = Истина; // Пропуск первой строки (заголовок)
    
    Для Каждого Строка Из Строки Цикл
        Если ПропуститьЗаголовок Тогда
            ПропуститьЗаголовок = Ложь;
            Продолжить;
        КонецЕсли;
        
        Если Строка = "" Тогда
            Продолжить;
        КонецЕсли;
        
        Колонки = СтрРазделить(Строка, ";");
        
        // Проверяем, что в строке достаточно колонок
        Если Колонки.Количество() < 2 Тогда
            Сообщить("Ошибка формата: " + Строка);
            Продолжить;
        КонецЕсли;
        
        Попытка
            Код              = Число(СокрЛП(Колонки[0]));
            Наименование     = СокрЛП(Колонки[1]);
                        
            // Поиск элемента по коду через запрос
            Запрос = Новый Запрос;
            Запрос.Текст = 
                "ВЫБРАТЬ 
                |    Ссылка 
                |ИЗ 
                |    Справочник.Специализация КАК Специализация 
                |ГДЕ 
                |    Специализация.Код = &Код";
            Запрос.УстановитьПараметр("Код", Код);
            Результат = Запрос.Выполнить();
            Выборка = Результат.Выбрать();
            
            Если Выборка.Следующий() Тогда
                СсылкаСпециализация = Выборка.Ссылка;
                ОбъектСпециализация = СсылкаСпециализация.ПолучитьОбъект();
                Сообщить("Обновлен существующий элемент: " + Код);
            Иначе
                ОбъектСпециализация = Справочники.Специализация.СоздатьЭлемент();
                ОбъектСпециализация.Код = Код;
                Сообщить("Создан новый элемент: " + Код);
            КонецЕсли;
            
            // Заполнение реквизитов
            ОбъектСпециализация.Наименование = Наименование;
            
            // Сохранение изменений
            ОбъектСпециализация.Записать();
            Сообщить("Сохранено: " + Код);
            
        Исключение
            Сообщить("Ошибка в строке: " + Строка + " | " + ОписаниеОшибки());
        КонецПопытки;
    КонецЦикла;
КонецПроцедуры

&НаСервере
Функция НайтиИлиСоздатьЭлементСправочника(ИмяСправочника, Наименование)
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ 
        |    Ссылка 
        |ИЗ 
        |    Справочник." + ИмяСправочника + " КАК Элемент 
        |ГДЕ 
        |    Элемент.Наименование = &Наименование";
    Запрос.УстановитьПараметр("Наименование", Наименование);
    Результат = Запрос.Выполнить();
    Выборка = Результат.Выбрать();
    
    Если Выборка.Следующий() Тогда
        Возврат Выборка.Ссылка;
    Иначе
        НовыйЭлемент = Справочники[ИмяСправочника].СоздатьЭлемент();
        НовыйЭлемент.Наименование = Наименование;
        НовыйЭлемент.Записать();
        Возврат НовыйЭлемент.Ссылка;
    КонецЕсли;
КонецФункции

&НаКлиенте
Процедура Выгрузить(Команда)
    ТекстДляВыгрузки = СформироватьТекстДляВыгрузкиНаСервере();
    
    Диалог = Новый ДиалогВыбораФайла(РежимДиалогаВыбораФайла.Сохранение);
    Диалог.Заголовок = "Сохранить файл";
    Диалог.Фильтр = "Текстовые файлы (*.txt)|*.txt|CSV файлы (*.csv)|*.csv|Excel файлы (*.xls)|*.xls|Word файлы (*.docx)|*.docx";
    
    ИмяФайлаПоУмолчанию = "Выгрузка_специализаций.txt";
    Диалог.ПолноеИмяФайла = ИмяФайлаПоУмолчанию;
    
    Если Диалог.Выбрать() Тогда
        ВыбранныйФайл = Диалог.ПолноеИмяФайла;
        
        Попытка
            Расширение = нРег(Прав(ВыбранныйФайл, 4));
            
            Если Расширение = ".txt" Тогда
                СохранитьВTXT(ВыбранныйФайл, ТекстДляВыгрузки);
            ИначеЕсли Расширение = ".csv" Тогда
                СохранитьВCSV(ВыбранныйФайл, ТекстДляВыгрузки);
            ИначеЕсли Расширение = ".xls" Тогда
                СохранитьВXLS(ВыбранныйФайл);
            ИначеЕсли Расширение = ".docx" Тогда
                СохранитьВDOCX(ВыбранныйФайл);
            КонецЕсли;
            
            Сообщить("Файл сохранен: " + ВыбранныйФайл);
        Исключение
            Сообщить("Ошибка: " + ОписаниеОшибки());
        КонецПопытки;
    КонецЕсли;
КонецПроцедуры

&НаСервере
Функция СформироватьТекстДляВыгрузкиНаСервере()
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    Специализация.Код КАК Код,
        |    Специализация.Наименование КАК Наименование
        |ИЗ
        |    Справочник.Специализация КАК Специализация";
    
    РезультатЗапроса = Запрос.Выполнить();
    
    Если РезультатЗапроса.Пустой() Тогда
        Возврат "";
    КонецЕсли;
    
    Заголовки = "Код;Наименование";
    Результат = Заголовки + Символы.ПС;
    
    Выборка = РезультатЗапроса.Выбрать();
    Пока Выборка.Следующий() Цикл
        Результат = Результат + 
            Строка(Выборка.Код) + ";" +
            Строка(Выборка.Наименование) + Символы.ПС;
    КонецЦикла;
    
    Возврат Результат;
КонецФункции

&НаКлиенте
Процедура СохранитьВTXT(Путь, Данные)
    ЗаписьТекста = Новый ЗаписьТекста(Путь);
    ЗаписьТекста.ЗаписатьСтроку(Данные);
    ЗаписьТекста.Закрыть();
КонецПроцедуры

&НаКлиенте
Процедура СохранитьВCSV(Путь, Данные)
    Данные = СтрЗаменить(Данные, "
    |", Символы.ПС);
    ЗаписьТекста = Новый ЗаписьТекста(Путь);
    ЗаписьТекста.ЗаписатьСтроку(Данные);
    ЗаписьТекста.Закрыть();
КонецПроцедуры

&НаСервере
Процедура СохранитьВXLS(Путь)
    Excel = Новый COMОбъект("Excel.Application");
    Excel.Visible = Ложь;
    Книга = Excel.Workbooks.Add();
    Лист = Книга.Worksheets(1);
    
    Лист.Cells(1, 1).Value = "Код";
    Лист.Cells(1, 2).Value = "Наименование";
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    Специализация.Код КАК Код,
        |    Специализация.Наименование КАК Наименование
        |ИЗ
        |    Справочник.Специализация КАК Специализация";
    
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    Для i = 1 По РезультатЗапроса.Количество() Цикл
        Выборка.Следующий();
        Лист.Cells(i + 1, 1).Value = Выборка.Код;
        Лист.Cells(i + 1, 2).Value = Выборка.Наименование;
    КонецЦикла;
    
    Книга.SaveAs(Путь);
    Книга.Close();
    Excel.Quit();
КонецПроцедуры

&НаСервере
Процедура СохранитьВDOCX(Путь)
    Word = Новый COMОбъект("Word.Application");
    Word.Visible = Ложь;
    Документ = Word.Documents.Add();
    
    Документ.Content.Text = "Код;Наименование" + Символы.ПС;
    
    Запрос = Новый Запрос;
    Запрос.Текст = 
        "ВЫБРАТЬ
        |    Специализация.Код КАК Код,
        |    Специализация.Наименование КАК Наименование
        |ИЗ
        |    Справочник.Специализация КАК Специализация";
    
    РезультатЗапроса = Запрос.Выполнить();
    Выборка = РезультатЗапроса.Выбрать();
    
    Таблица = Документ.Tables.Add(Документ.Content, РезультатЗапроса.Количество() + 1, 2);
    Таблица.Cell(1, 1).Range.Text = "Код";
    Таблица.Cell(1, 2).Range.Text = "Наименование";
    
    Для i = 1 По РезультатЗапроса.Количество() Цикл
        Выборка.Следующий();
        Таблица.Cell(i + 1, 1).Range.Text = Строка(Выборка.Код);
        Таблица.Cell(i + 1, 2).Range.Text = Строка(Выборка.Наименование);
    КонецЦикла;
    
    Документ.SaveAs2(Путь);
    Документ.Close();
    Word.Quit();
КонецПроцедуры